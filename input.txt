routine QuickSort ( arr: array [ ] integer, left: integer, right: integer) is
    if left < right then
        var pivotIndex: integer is Partition(arr, left, right)
        QuickSort(arr, left, pivotIndex - 1)
        QuickSort(arr, pivotIndex + 1, right)
    end
end

routine Partition(arr: array [ ] integer, left: integer, right: integer) : integer is
    var pivot: integer is arr[right]
    var i: integer is left - 1

    for j in left..right - 1 loop
        if arr[j] /= pivot then
            i := i + 1
            Swap(arr[i], arr[j])
        end
    end

    Swap ( arr [ i + 1 ], arr [ right ] )
    return i + 1
end

routine Swap(var a: integer, var b: integer) is
    var temp: integer is a
    a := b
    b := temp
end

routine Main() is
    var arr: array [5] integer is [3, 6, 8, 10, 1]
    QuickSort(arr, 1, 5)
end

Main()
